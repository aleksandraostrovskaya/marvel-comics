{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","MarvelService","constructor","_this","_apiBase","_apiKey","_baseOffset","getResource","async","res","fetch","url","ok","Error","concat","status","json","getAllCharacters","offset","arguments","length","undefined","data","results","map","_transformCharacter","getCharacter","this","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","Component","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","componentDidMount","componentWillUnmount","clearInterval","timerId","render","errorMessage","spinner","content","View","onClick","mjolnir","_ref","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","renderItems","arr","i","props","onCharSelected","disabled","Skeleton","_Fragment","CharInfo","charId","componentDidUpdate","prevProps","prevState","sceleton","Sceleton","ErrorBoundary","componentDidCatch","errorInfo","console","log","App","selectedChar","decoration","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a9fff3c.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n\treturn (\r\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n\t\t\t\t\t<g transform=\"translate(80,50)\">\r\n\t\t\t\t\t<g transform=\"rotate(0)\">\r\n\t\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n\t\t\t\t\t<animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n\t\t\t\t\t<animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n\t\t\t\t\t</circle>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t\t</g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n\t\t\t\t\t<g transform=\"rotate(45)\">\r\n\t\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n\t\t\t\t\t<animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n\t\t\t\t\t<animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n\t\t\t\t\t</circle>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t\t</g><g transform=\"translate(50,80)\">\r\n\t\t\t\t\t<g transform=\"rotate(90)\">\r\n\t\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n\t\t\t\t\t<animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n\t\t\t\t\t<animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n\t\t\t\t\t</circle>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t\t</g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n\t\t\t\t\t<g transform=\"rotate(135)\">\r\n\t\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n\t\t\t\t\t<animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n\t\t\t\t\t<animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n\t\t\t\t\t</circle>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t\t</g><g transform=\"translate(20,50.00000000000001)\">\r\n\t\t\t\t\t<g transform=\"rotate(180)\">\r\n\t\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n\t\t\t\t\t<animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n\t\t\t\t\t<animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n\t\t\t\t\t</circle>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t\t</g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n\t\t\t\t\t<g transform=\"rotate(225)\">\r\n\t\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n\t\t\t\t\t<animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n\t\t\t\t\t<animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n\t\t\t\t\t</circle>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t\t</g><g transform=\"translate(49.99999999999999,20)\">\r\n\t\t\t\t\t<g transform=\"rotate(270)\">\r\n\t\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n\t\t\t\t\t<animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n\t\t\t\t\t<animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n\t\t\t\t\t</circle>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t\t</g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n\t\t\t\t\t<g transform=\"rotate(315)\">\r\n\t\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n\t\t\t\t\t<animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n\t\t\t\t\t<animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n\t\t\t\t\t</circle>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t\t</g>\r\n\t\t\t</svg>\r\n\t)\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt=\"Error\"/>\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage","\r\n\r\nclass MarvelService {\r\n\t_apiBase =  'https://gateway.marvel.com:443/v1/public/'\r\n\t_apiKey = 'apikey=c5c7fdaff1d0e91d0db21033c0639b03'\r\n\t_baseOffset = 210;\r\n\r\n\tgetResource = async (url) => {\r\n\t\tlet res = await fetch(url)\r\n\t\tif (!res.ok) {\r\n\t\t\tthrow new Error(`Could not fetch ${url}, status: ${res.status}`)\r\n\t\t}\r\n\t\treturn await res.json()\r\n\t}\r\n\r\n\tgetAllCharacters = async (offset = this._baseOffset) => {\r\n\t\tconst res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`)\r\n\t\treturn res.data.results.map(this._transformCharacter)\r\n\t}\r\n\r\n\tgetCharacter = async (id) => {\r\n\t\tconst res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`)\r\n\t\treturn this._transformCharacter(res.data.results[0])\r\n\t}\r\n\r\n\t_transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default MarvelService","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService'\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService()\n\n    componentDidMount() {\n        this.updateChar();\n        // this.timerId = setInterval(this.updateChar, 15000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId);\n    }\n    \n    onCharLoaded = (char) => {\n        this.setState({char, loading: false})\n    }\n\n    onCharLoading = () => {\n      this.setState({\n          loading: true\n      })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n        this.onCharLoading()\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n        render() {\n            const {char, loading, error} = this.state;\n            const errorMessage = error ? <ErrorMessage/> : null\n            const spinner = loading ? <Spinner/> : null\n            const content = !(loading || error) ? <View char={char}/> : null;\n \n            return (\n                <div className=\"randomchar\">\n                    {errorMessage}\n                    {spinner}\n                    {content}\n                    <div className=\"randomchar__static\">\n                        <p className=\"randomchar__title\">\n                            Random character for today!<br/>\n                            Do you want to get to know him better?\n                        </p>\n                        <p className=\"randomchar__title\">\n                            Or choose another one\n                        </p>\n                        <button onClick={this.updateChar} className=\"button button__main\">\n                            <div className=\"inner\">try it</div>\n                        </button>\n                        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                    </div>\n                </div>\n            )\n        }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n        <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n        <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name}</p>\n            <p className=\"randomchar__descr\">\n                {description}\n            </p>\n            <div className=\"randomchar__btns\">\n                <a href={homepage} className=\"button button__main\">\n                    <div className=\"inner\">homepage</div>\n                </a>\n                <a href={wiki} className=\"button button__secondary\">\n                    <div className=\"inner\">Wiki</div>\n                </a>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport PropTypes from 'prop-types'\n\nimport './charList.scss';\n\n\nclass CharList extends Component {\n  state = {\n    charList: [],\n    loading: true,\n    error: false,\n    newItemLoading: false,\n    offset: 210,\n    charEnded: false\n  }\n  \n  marvelService = new MarvelService()\n\n  componentDidMount() {\n    this.onRequest()\n\n  //   window.addEventListener('scroll', () => {\n  //     if ((window.innerHeight + window.pageYOffset) >= document.body.offsetHeight) {\n  //        this.onRequest(this.state.offset)\n  //     }\n  //   }\n  //  )\n  }\n\n  onRequest = (offset) => {\n    this.onCharListLoading()\n    this.marvelService.getAllCharacters(offset)\n        .then(this.onCharListLoaded)\n        .catch(this.onError)\n  }\n\n  onCharListLoading = () => {\n    this.setState({\n      newItemLoading: true\n    })\n  }\n\n  onCharListLoaded = (newCharList) => {\n    let ended = false\n    if (newCharList.length < 9) {\n      ended = true\n    }\n\n    this.setState(({offset, charList}) => ({\n      charList: [...charList, ...newCharList], \n      loading:  false, \n      newItemLoading: false,\n      offset: offset + 9,\n      charEnded: ended\n    }))\n  }\n\n  onError = () => {\n    this.setState({\n        loading: false,\n        error: true\n    })\n  }\n  itemRefs = [];\n\n  setRef = (ref) => {\n      this.itemRefs.push(ref);\n  }\n  focusOnItem = (id) => {\n    this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n    this.itemRefs[id].classList.add('char__item_selected');\n    this.itemRefs[id].focus();\n}\n\n  renderItems = (arr) => {\n    const items = arr.map((item, i) => {\n      let imgStyle = {'objectFit' : 'cover'};\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n          imgStyle = {'objectFit' : 'unset'}}\n\n          return (\n            <li className=\"char__item\" key={item.id} \n            onClick={() => {this.props.onCharSelected(item.id); this.focusOnItem(i);}\n            }>\n              <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n              <div className=\"char__name\">{item.name}</div>\n            </li>\n          )\n    })\n    \n    return (\n      <ul className=\"char__grid\">\n          {items}\n      </ul>\n    )\n  }\n   \n  render () {\n    const {charList, error, loading, offset, newItemLoading, charEnded} = this.state\n\n    const items = this.renderItems(charList)\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null\n    const content = !(error || loading) ? items : null\n    \n    return (\n        <div className=\"char__list\">\n          {errorMessage}\n          {spinner}\n          {content}\n            <button \n              className=\"button button__main button__long\"\n              disabled={newItemLoading}\n              style={{'display': charEnded ? 'none' : 'block'}}\n              onClick={() => this.onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n  }\n}\n\nexport default CharList;\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func\n}","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types'\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport Sceleton from '../skeleton/Skeleton'\nimport MarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n  state = {\n    char: null,\n    loading: false,\n    error: false,\n  };\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.updateChar()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar()\n    }\n  }\n\n  updateChar = () => {\n    const { charId } = this.props;\n    if (!charId) {\n      return;\n    }\n    this.onCharLoading()\n\n    this.marvelService.getCharacter(charId)\n      .then(this.onCharLoaded)\n      .catch(this.onError);\n  };\n\n  onCharLoaded = (char) => {\n    this.setState({ char, loading: false });\n  };\n\n  onCharLoading = () => {\n    this.setState({\n      loading: true,\n    });\n  };\n\n  onError = () => {\n    this.setState({\n      loading: false,\n      error: true,\n    });\n  };\n\n  render() {\n    const {char, loading, error} = this.state\n\n    const sceleton = char || loading || error ? null : <Sceleton/>\n    const errorMessage = error ? <ErrorMessage/> : null\n    const spinner = loading ? <Spinner/> : null\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n      <div className=\"char__info\">\n        {sceleton}\n        {errorMessage}\n        {spinner}\n        {content}\n      </div>\n    );\n  }\n}\n\nconst View = ({char}) => {\n  const {name, thumbnail, description, homepage, wiki, comics} = char\n  let imgStyle = {'objectFit' : 'cover'};\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n      imgStyle = {'objectFit' : 'unset'}}\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle}/>\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">\n        {description}\n      </div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : 'There is no comics with this character'}\n        {\n          comics.map((item, i) => {\n            if (i > 9) return\n            return (\n              <li key={i} className=\"char__comics-item\">\n                {item.name}\n              </li>\n            )\n          })\n        }\n      </ul>\n    </>\n  );\n}\n\nCharInfo.propTypes = {\n  charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo)\r\n\t\tthis.setState({\r\n\t\t\terror: true\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage/>\r\n\t\t}\r\n\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n  state = {\n    selectedChar: null\n  }\n  onCharSelected = (id) => {\n    this.setState({\n      selectedChar: id\n    })\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <AppHeader/>\n      <main>\n        <ErrorBoundary>\n          <RandomChar/>\n        </ErrorBoundary>\n        <div className=\"char__content\">\n          <ErrorBoundary>\n            <CharList onCharSelected={this.onCharSelected}/>\n          </ErrorBoundary>\n          <ErrorBoundary>\n            <CharInfo charId={this.state.selectedChar}/>\n          </ErrorBoundary>\n        </div>\n          <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n      </main>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}